# This workflow will publish both Backend and Frontend images to Docker

name: Publish Docker Images

on:
  release:
    types: [published]

  # Allow mannually trigger
  workflow_dispatch:

jobs:
  push_to_repository:
    name: Push Docker Images to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker - Frontend
        id: frontend-meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: benjamingroseclose/bengroseclose_website_frontend

      - name: Build and push Docker image - Frontend
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ./code/ui/.
          push: true
          tags: ${{ steps.frontend-meta.outputs.tags }}
          labels: ${{ steps.frontend-meta.outputs.labels }}

      - name: Extract metadata (tags, labels) for Docker - Backend
        id: backend-meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: benjamingroseclose/bengroseclose_website_backend

      - name: Build and push Docker image - Backend
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ./code/backend/.
          push: true
          tags: ${{ steps.backend-meta.outputs.tags }}
          labels: ${{ steps.backend-meta.outputs.labels }}

  deploy:
    needs: push_to_repository
    name: Deploy to Azure Container Apps
    runs-on: ubuntu-latest
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Frontend to Container Apps
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az config set extension.use_dynamic_install=yes_without_prompt
            az containerapp update \
              --name bengroseclose-website \
              --resource-group Personal \
              --container-name frontend
              --cpu 0.5
              --image benjamingroseclose/bengroseclose_website_frontend:latest
              --memory 1
              --tags 'cost-center=personal' 'application=BenGrosecloseWebsite' 'deployment-type=auto'
              --min-replicas 0
              --max-replicas 2

      - name: Deploy Backend to Conatiner Apps
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az config set extension.use_dynamic_install=yes_without_prompt
            az containerapp update \
              --name bengroseclose-website \
              --resource-group Personal \
              --container-name backend
              --cpu 0.5
              --image benjamingroseclose/bengroseclose_website_backend:latest
              --memory 1
              --tags 'cost-center=personal' 'application=BenGrosecloseWebsite' 'deployment-type=auto'
              --min-replicas 0
              --max-replicas 2
